package xyz.for01.controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import xyz.for01.conn.Conn;
import xyz.for01.dao.MemberDao;
import xyz.for01.membervo.MemberVo;

@WebServlet("/userList")
public class UserListServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		MemberDao mDo = MemberDao.getInstance();
		
		List<MemberVo> userList = mDo.selectAllUser();
		request.setAttribute("userList", userList);
		MemberVo mVo = new MemberVo();
		
		HttpSession session =  request.getSession();
		
		try {
			mVo =  (MemberVo) session.getAttribute("loginUser");
			if(mVo == null || !"4".equals(mVo.getGrade())) {
				RequestDispatcher dispatcher = request.getRequestDispatcher("index.jsp");
				dispatcher.forward(request, response);
			}
			else {
				RequestDispatcher dispatcher = request.getRequestDispatcher("userList.jsp");	
				dispatcher.forward(request, response);
			}
		} catch (Exception e) {
			RequestDispatcher dispatcher = request.getRequestDispatcher("index.jsp");
			dispatcher.forward(request, response);
		}
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		
		int userNo = Integer.parseInt(request.getParameter("userno"));
		String grade = request.getParameter("grade");
		
		MemberVo mVo = new MemberVo();		
		mVo.setUserno(userNo);
		mVo.setGrade(grade);
		
		MemberDao mDo = MemberDao.getInstance();
		List<MemberVo> userList = mDo.selectAllUserModify();
		
		doGet(request, response);
		
	}
}
















