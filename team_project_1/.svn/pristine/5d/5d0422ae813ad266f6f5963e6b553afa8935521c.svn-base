package xyz.for01.controller.board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import xyz.for01.boardvo.BoardVo;
import xyz.for01.conn.Conn;

public class BoardDAO { 
DBCP dbcp = new DBCP();
Connection conn = null;
PreparedStatement pstmt = null;
Statement stmt = null;
ResultSet rs = null;
String sql = null;
 
public void closeDB() {
  try {
    if(rs != null) rs.close();
    if(stmt != null) stmt.close();
    if(pstmt != null) pstmt.close();
    if(conn != null) conn.close();
  } catch (SQLException e) {
    e.printStackTrace();
  }
}
 
public ArrayList<boarddto> getList(int startRow, int endRow) {

  ArrayList<boarddto> list = new ArrayList<boarddto>();
   
  try {
    conn = dbcp.getConnection();
     
    sql = "select *, (select u_name from user where idx = writer_fk) writer, (select idx from answer where idx = answer_fk) answer from board order by idx desc limit "+startRow+", "+endRow;
     
    stmt = conn.createStatement();
    rs = stmt.executeQuery(sql);
     
    while(rs.next()) {
      int idx = rs.getInt("idx");
      String title = rs.getString("title");
      int count = rs.getInt("count");
      String writer = rs.getString("writer");
      String answer = rs.getString("answer");
      String enroll = rs.getString("enroll");
       
      BoardDTO dto = new BoardDTO();
      dto .setIdx(idx);
      dto .setTitle(title);
      dto .setCount(count);
      dto .setWriter(writer);
      dto .setAnswer(answer);
      dto .setEnroll(enroll);
      list.add(dto);
    }
     
  } catch (Exception e){
    e.printStackTrace();
  } finally {
    closeDB();
  }
  return list;
}
 
public int getTotalCount(){
  int total = 0;
   
  try {
    conn = dbcp.getConnection();
     
    sql = "select count(*) from board";
    pstmt = conn.prepareStatement(sql);
     
    rs = pstmt.executeQuery();
    if(rs.next()){
      total = rs.getInt(1);
    }
  } catch (Exception e){
    e.printStackTrace();
  } finally {
    closeDB();
  }
  return total;
}
	BoardDAO() {
		
	}
	private static BoardDAO instance = new BoardDAO();
	
	public static BoardDAO getInstance() {
		return instance;
	}
	public List<BoardVo> selectAllBoards(){
		String sql = "select * from board order by boardno desc";
		List<BoardVo> list = new ArrayList<BoardVo>();
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				BoardVo bVo = new BoardVo();
				bVo.setBoardno(rs.getInt("boardno"));
				bVo.setCategory_num(rs.getInt("category_num"));
				bVo.setEmailid(rs.getString("emailid"));
				bVo.setTitle(rs.getString("title"));
				bVo.setContent(rs.getString("content"));
				bVo.setWritedate(rs.getDate("writedate"));
				list.add(bVo);
			}
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt, rs);
		}
		return list;
	}
	public void insertBoard(BoardVo bVo) {
		String sql = "insert into board(boardno, category_num, title, content) values(board_seq.nextval,?,?,?)";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bVo.getCategory_num());
			pstmt.setString(2, bVo.getTitle());
			pstmt.setString(3, bVo.getContent());
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt);
		}
	}
	public BoardVo selectBoardByBoardno(String boardno) {
	String sql = "select * from board where boardno=?";
	BoardVo bVo = null;
	try {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardno);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				bVo = new BoardVo();
				bVo.setBoardno(rs.getInt("boardno"));
				bVo.setCategory_num(rs.getInt("category_num"));
				bVo.setEmailid(rs.getString("emailid"));
				bVo.setTitle(rs.getString("title"));
				bVo.setContent(rs.getString("content"));
				bVo.setWritedate(rs.getDate("writedate"));
			}
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt, rs);
		}
	} catch (Exception e) {
		e.printStackTrace();// TODO: handle exception
	}
	return bVo;
	}
	public void updateBoard(BoardVo bVo) {
		String sql = "update board set category_num=?, title=?, content=? where boardno=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bVo.getCategory_num());
			pstmt.setString(2, bVo.getTitle());
			pstmt.setString(3, bVo.getContent());
			pstmt.setInt(4, bVo.getBoardno());
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt);
		}
	}
	public void deleteBoard(String boardno) {
		String sql = "delete board where boardno=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardno);
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt);
		}
	}

}	
	
	


/*public BoardVo selectBoardByBoardno(String boardno) {
	String sql = "select * from board where boardno=?";
	BoardVo bVo = null;
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
		try {
			conn = Conn.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardno);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				bVo = new BoardVo();
				bVo.setBoardno(rs.getInt("boardno"));
				bVo.setCategory(rs.getString("category"));
				bVo.setEmailid(rs.getString("emailid"));
				bVo.setTitle(rs.getString("title"));
				bVo.setPictureurl(rs.getString("pictureurl"));
				bVo.setContent(rs.getString("content"));
				bVo.setWritedate(rs.getDate("writedate"));
			} 
		} catch (Exception e) {
			e.printStackTrace();// TODO: handle exception
		} finally {
			Conn.close(conn, pstmt, rs);
		} 
	return bVo;
}*/